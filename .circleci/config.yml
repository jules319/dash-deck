version: '2.1'
orbs:
  browser-tools: circleci/browser-tools@1.4.6

jobs:
    "node":
        docker:
            - image: cimg/python:3.7-node
              auth:
                  username: dashautomation
                  password: $DASH_PAT_DOCKERHUB

        steps:
            - checkout

            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "package.json" }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "demos/requirements.txt" }}-{{ checksum "requirements.txt" }}

            - run:
                name: Create virtualenv
                command: |
                    python -m venv venv

            - run:
                name: Install requirements
                command: |
                    . venv/bin/activate
                    pip install -U pip
                    pip install -r requirements.txt -r tests/requirements.txt -r demos/requirements.txt

            - run:
                name: Install package.json
                command: |
                    . venv/bin/activate
                    npm i

            - save_cache:
                key: deps1-{{ .Branch }}-{{ checksum "package.json" }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "demos/requirements.txt" }}-{{ checksum "requirements.txt" }}
                paths:
                    - node_modules

            - run:
                name: Run eslint
                command: ./node_modules/.bin/eslint src
                when: always


    "python-3-7": &test-template
        docker:
            - image: cimg/python:3.7-browsers
              auth:
                  username: dashautomation
                  password: $DASH_PAT_DOCKERHUB

        environment:
            PERCY_ENABLED: True

        steps:
            - checkout

            - browser-tools/install-browser-tools

            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "demos/requirements.txt" }}-{{ checksum "requirements.txt" }}

            - run:
                name: Create virtualenv
                command: |
                    python -m venv venv

            - run:
                name: Install requirements
                command: |
                    . venv/bin/activate
                    pip install -U pip
                    pip install -r requirements.txt -r tests/requirements.txt -r demos/requirements.txt

            - save_cache:
                key: deps1-{{ .Branch }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "demos/requirements.txt" }}-{{ checksum "requirements.txt" }}
                paths:
                    - "venv"

            - run:
                name: Run black
                command: |
                    . venv/bin/activate
                    black usage* --check
                    black demos --check
                    black tests --check
                when: always

            - run:
                name: Rendering Tests
                command: |
                    . venv/bin/activate
                    pytest tests/test_render.py
                when: always
            
            - run:
                name: Percy Snapshot Tests
                command: |
                    . venv/bin/activate
                    pytest tests/test_percy.py
                when: always
                

            - store_artifacts:
                path: /tmp/dash_artifacts
                destination: snapshots

    "python-3-8":
        <<: *test-template
        docker:
            - image: cimg/python:3.8-browsers
              auth:
                  username: dashautomation
                  password: $DASH_PAT_DOCKERHUB
        environment:
            PERCY_ENABLE: False

    "python-3-9":
        <<: *test-template
        docker:
            - image: cimg/python:3.9-browsers
              auth:
                  username: dashautomation
                  password: $DASH_PAT_DOCKERHUB
        environment:
            PERCY_ENABLE: False

    "python-3-10":
        <<: *test-template
        docker:
            - image: cimg/python:3.10-browsers
              auth:
                  username: dashautomation
                  password: $DASH_PAT_DOCKERHUB
        environment:
            PERCY_ENABLE: False

    "python-3-11":
        <<: *test-template
        docker:
            - image: cimg/python:3.11-browsers
              auth:
                  username: dashautomation
                  password: $DASH_PAT_DOCKERHUB
        environment:
            PERCY_ENABLE: False

    "python-3-12":
        <<: *test-template
        docker:
            - image: cimg/python:3.12-browsers
              auth:
                  username: dashautomation
                  password: $DASH_PAT_DOCKERHUB
        environment:
            PERCY_ENABLE: False


workflows:
    version: 2
    build:
        jobs:
            - "python-3-7":
                context: dash-docker-hub
            - "python-3-8":
                context: dash-docker-hub
            - "python-3-9":
                context: dash-docker-hub
            - "python-3-10":
                context: dash-docker-hub
            - "python-3-11":
                context: dash-docker-hub
            - "python-3-12":
                context: dash-docker-hub
            - "node":
                context: dash-docker-hub
